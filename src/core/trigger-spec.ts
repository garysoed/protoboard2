export enum TriggerSpec {
  // Keys
  A = 'a',
  B = 'b',
  C = 'c',
  D = 'd',
  E = 'e',
  F = 'f',
  G = 'g',
  H = 'h',
  I = 'i',
  J = 'j',
  K = 'k',
  L = 'l',
  M = 'm',
  N = 'n',
  O = 'o',
  P = 'p',
  Q = 'q',
  R = 'r',
  S = 's',
  T = 't',
  U = 'u',
  V = 'v',
  W = 'w',
  X = 'x',
  Y = 'y',
  Z = 'z',
  QUESTION = '?',

  // Others
  CLICK = 'click',
}

type ReservedTriggerSpec = TriggerSpec.QUESTION;
export type UnreservedTriggerSpec = Exclude<TriggerSpec, ReservedTriggerSpec>;

export const TRIGGER_KEYS: ReadonlySet<TriggerSpec> = new Set([
  TriggerSpec.A,
  TriggerSpec.B,
  TriggerSpec.C,
  TriggerSpec.D,
  TriggerSpec.E,
  TriggerSpec.F,
  TriggerSpec.G,
  TriggerSpec.H,
  TriggerSpec.I,
  TriggerSpec.J,
  TriggerSpec.K,
  TriggerSpec.L,
  TriggerSpec.M,
  TriggerSpec.N,
  TriggerSpec.O,
  TriggerSpec.P,
  TriggerSpec.Q,
  TriggerSpec.R,
  TriggerSpec.S,
  TriggerSpec.T,
  TriggerSpec.U,
  TriggerSpec.V,
  TriggerSpec.W,
  TriggerSpec.X,
  TriggerSpec.Y,
  TriggerSpec.Z,
  TriggerSpec.QUESTION,
]);
